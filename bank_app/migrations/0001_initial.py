# Generated by Django 5.0.4 on 2024-04-10 19:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('AccountNumber', models.IntegerField(primary_key=True, serialize=False)),
                ('Type', models.CharField(choices=[('Savings', 'Savings'), ('Current', 'Current')], max_length=255)),
                ('Balance', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'ACCOUNT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBeneficiary',
            fields=[
                ('BeneficiaryID', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
                ('Relationship', models.CharField(choices=[('Son', 'Son'), ('Mother', 'Mother'), ('Father', 'Father'), ('Sister', 'Sister'), ('Brother', 'Brother')], max_length=255)),
            ],
            options={
                'db_table': 'ACCOUNT_BENEFICIARY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alerts',
            fields=[
                ('AlertID', models.IntegerField(primary_key=True, serialize=False)),
                ('Message', models.CharField(max_length=500)),
                ('Type', models.CharField(choices=[('ATM', 'ATM'), ('Customer', 'Customer')], max_length=20)),
                ('Time', models.DateTimeField()),
            ],
            options={
                'db_table': 'ALERTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ATM',
            fields=[
                ('ATMId', models.IntegerField(primary_key=True, serialize=False)),
                ('Balance', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('Street', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ATM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('TransactionID', models.IntegerField(primary_key=True, serialize=False)),
                ('Time', models.DateTimeField(auto_now_add=True)),
                ('Type', models.CharField(choices=[('Online', 'Online'), ('ATM', 'ATM'), ('Branch', 'Branch')], max_length=255)),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': 'TRANSACTION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('BranchID', models.IntegerField(primary_key=True, serialize=False)),
                ('street', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'BRANCH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('CustomerID', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
                ('DOB', models.DateField()),
                ('RegistrationDate', models.DateField(auto_now_add=True)),
                ('MobileNo', models.CharField(max_length=20, unique=True)),
                ('Email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('Street', models.CharField(blank=True, max_length=255, null=True)),
                ('Age', models.IntegerField()),
            ],
            options={
                'db_table': 'CUSTOMER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('EmployeeID', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'EMPLOYEE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('LoanID', models.IntegerField(primary_key=True, serialize=False)),
                ('Type', models.CharField(choices=[('Education', 'Education'), ('Automobile', 'Automobile'), ('Property', 'Property')], max_length=255)),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('InterestRate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'db_table': 'LOAN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoanPayment',
            fields=[
                ('PaymentID', models.IntegerField(primary_key=True, serialize=False)),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('Date', models.DateField()),
            ],
            options={
                'db_table': 'LOAN_PAYMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OnlineBanking',
            fields=[
                ('OBankingID', models.IntegerField(primary_key=True, serialize=False)),
                ('RegistrationDate', models.DateField()),
                ('LastAccessDate', models.DateField()),
                ('Password', models.BinaryField(max_length='max')),
            ],
            options={
                'db_table': 'ONLINE_BANKING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('zipcode', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ZIPCODE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AtmAlerts',
            fields=[
                ('AlertID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='atmalert_alert', serialize=False, to='bank_app.alerts')),
            ],
            options={
                'db_table': 'ATM_ALERTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerAlerts',
            fields=[
                ('CAlertID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='customeralert_alert', serialize=False, to='bank_app.alerts')),
            ],
            options={
                'db_table': 'CUSTOMER_ALERTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ATMTransaction',
            fields=[
                ('ATransactionID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='atmtransaction_transaction', serialize=False, to='bank_app.transaction')),
            ],
            options={
                'db_table': 'ATM_TRANSACTION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BranchTransaction',
            fields=[
                ('BTransactionID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='branchtransaction_transaction', serialize=False, to='bank_app.transaction')),
            ],
            options={
                'db_table': 'BRANCH_TRANSACTION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OnlineTransaction',
            fields=[
                ('OTransactionID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='onlinetransaction_transaction', serialize=False, to='bank_app.transaction')),
            ],
            options={
                'db_table': 'ONLINE_TRANSACTION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('ManagerId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='manager_employee', serialize=False, to='bank_app.employee')),
            ],
            options={
                'db_table': 'MANAGER',
                'managed': False,
            },
        ),
    ]
